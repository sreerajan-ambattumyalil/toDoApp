{
  'targets': [
    {
      'target_name': 'base',
      'type': 'static_library',
      'direct_dependent_settings': {
        'include_dirs': [
          'src',
        ],
        'xcode_settings': {
          'CLANG_CXX_LANGUAGE_STANDARD': 'gnu++11',
          'CLANG_CXX_LIBRARY': 'libstdc++',
        },
        'cflags_cc': [
          '-std=c++0x',
        ],
      },
      'include_dirs': [
        'src',
      ],
      'xcode_settings': {
        'CLANG_CXX_LANGUAGE_STANDARD': 'gnu++11',
        'CLANG_CXX_LIBRARY': 'libstdc++',
      },
      'cflags_cc': [
        '-std=c++0x',
      ],
      'sources': [
        'src/base/atomic_ref_count.h',
        'src/base/atomicops.h',
        'src/base/atomicops_internals_arm_gcc.h',
        'src/base/atomicops_internals_atomicword_compat.h',
        'src/base/atomicops_internals_gcc.h',
        'src/base/atomicops_internals_mac.h',
        'src/base/atomicops_internals_mips_gcc.h',
        'src/base/atomicops_internals_tsan.h',
        'src/base/atomicops_internals_x86_gcc.cc',
        'src/base/atomicops_internals_x86_gcc.h',
        'src/base/atomicops_internals_x86_msvc.h',
        'src/base/base_export.h',
        'src/base/basictypes.h',
        'src/base/bind.h',
        'src/base/bind_helpers.cc',
        'src/base/bind_helpers.h',
        'src/base/bind_internal.h',
        'src/base/bind_internal_win.h',
        'src/base/callback.h',
        'src/base/callback_forward.h',
        'src/base/callback_helpers.cc',
        'src/base/callback_helpers.h',
        'src/base/callback_internal.cc',
        'src/base/callback_internal.h',
        'src/base/callback_registry.h',
        'src/base/cancelable_callback.h',
        'src/base/compiler_specific.h',
        'src/base/containers/hash_tables.h',
        'src/base/containers/linked_list.h',
        'src/base/containers/mru_cache.h',
        'src/base/containers/scoped_ptr_hash_map.h',
        'src/base/containers/small_map.h',
        'src/base/containers/stack_container.h',
        'src/base/logging.h',
        'src/base/memory/raw_scoped_refptr_mismatch_checker.h',
        'src/base/memory/ref_counted.cc',
        'src/base/memory/ref_counted.h',
        'src/base/memory/scoped_handle.h',
        'src/base/memory/scoped_policy.h',
        'src/base/memory/scoped_ptr.h',
        'src/base/memory/scoped_vector.h',
        'src/base/memory/weak_ptr.cc',
        'src/base/memory/weak_ptr.h',
        'src/base/move.h',
        'src/base/port.h',
        'src/base/scoped_clear_errno.h',
        'src/base/stl_util.h',
        'src/base/strings/string_piece.cc',
        'src/base/strings/string_piece.h',
        'src/base/strings/string_tokenizer.h',
        'src/base/strings/string_util.cc',
        'src/base/strings/string_util.h',
        'src/base/strings/string_util_constants.cc',
        'src/base/strings/string_util_posix.h',
        'src/base/strings/string_util_win.h',
        'src/base/strings/stringize_macros.h',
        'src/base/strings/stringprintf.cc',
        'src/base/strings/stringprintf.h',
        'src/base/template_util.h',
        'src/base/third_party/dynamic_annotations/dynamic_annotations.c',
        'src/base/third_party/dynamic_annotations/dynamic_annotations.gyp',
        'src/base/third_party/dynamic_annotations/dynamic_annotations.h',
        'src/base/third_party/dynamic_annotations/LICENSE',
        'src/base/third_party/dynamic_annotations/README.chromium',
        'src/base/third_party/valgrind/LICENSE',
        'src/base/third_party/valgrind/memcheck.h',
        'src/base/third_party/valgrind/README.chromium',
        'src/base/third_party/valgrind/valgrind.h',
        'src/base/threading/thread_collision_warner.cc',
        'src/base/threading/thread_collision_warner.h',
        'src/base/tuple.h',
        'src/build/build_config.h',
      ],
      'conditions': [
        # Don't warn about the "typedef 'foo' locally defined but not used"
        # for gcc 4.8 and higher.
        ['clang==0', {
          'cflags': [
            '-Wno-unused-local-typedefs',
          ],
          'direct_dependent_settings': {
            'cflags': [
              '-Wno-unused-local-typedefs',
            ],
          },
        }],
      ],
    },
  ],
}
